from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import CommandHandler, MessageHandler, ContextTypes, filters

career_questions = [
    "–¢—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å —Ä–∞–±–æ—Ç—É —Å –ª—é–¥—å–º–∏ –∏–ª–∏ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏?",
    "–¢–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–µ—à–∞—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –∏–ª–∏ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏?",
    "–¢—ã —Ö–æ—Ç–µ–ª(–∞) –±—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ—Ñ–∏—Å–µ –∏–ª–∏ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ?"
]

career_suggestions = {
    ("c –ª—é–¥—å–º–∏", "–ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏", "–≤ –æ—Ñ–∏—Å–µ"): "–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥ üéØ",
    ("c –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏", "–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏", "–≤ –æ—Ñ–∏—Å–µ"): "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç üë®‚Äçüíª",
    ("c –ª—é–¥—å–º–∏", "–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏", "–Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ"): "–ò–Ω–∂–µ–Ω–µ—Ä-—Å—Ç—Ä–æ–∏—Ç–µ–ª—å üèóÔ∏è",
    ("c –∫–æ–º–ø—å—é—Ç–µ—Ä–∞–º–∏", "–ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏–¥–µ–∏", "–Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ"): "–î–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ç–µ—Ä—å–µ—Ä–æ–≤ üñåÔ∏è"

}

user_answers = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    user_answers[user_id] = []
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏.")
    await update.message.reply_text(career_questions[0])

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.chat_id
    text = update.message.text.lower()
    
    if user_id not in user_answers:
        user_answers[user_id] = []

    user_answers[user_id].append(text)

    if len(user_answers[user_id]) < len(career_questions):
        next_question = career_questions[len(user_answers[user_id])]
        await update.message.reply_text(next_question)
    else:
        key = tuple(user_answers[user_id])
        suggestion = career_suggestions.get(key, '–£ —Ç–µ–±—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä!')
        await update.message.reply_text(f"–ù–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ —è –¥—É–º–∞—é, —Ç–µ–±–µ –ø–æ–¥–æ–π–¥–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏—è: {suggestion}")
        user_answers.pop(user_id)

def setup_handlers(app):
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))